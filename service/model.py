from enum import Enum
from typing import Optional


class User:
    '''
    def __init__(self, email: Optional[str] = None, pwdhash: Optional[str] = None, salt: Optional[str] = None):
        """User object

        Args:
            email (Optional[str], optional): User's email. Defaults to None.
            pwdhash (Optional[str], optional): Hashcode of the user's password. Defaults to None.
            salt (Optional[str], optional): Salt of the hashcode. Defaults to None.
        """
        self.email = email
        self.pwdhash = pwdhash
        self.salt = salt'''
    def __init__(self, email: Optional[str] = None, pwdhash: Optional[str] = None, salt: Optional[str] = None):
        self.email = email
        self.pwdhash = pwdhash
        self.salt = salt
        self.is_authenticated = False
        self.is_active = False
        self.is_anonymous = False

    def get_id(self):
        return self.email

    # 你可以添加其他逻辑来设置这些属性
    def activate(self):
        self.is_active = True

    def authenticate(self):
        self.is_authenticated = True

    def make_anonymous(self):
        self.is_anonymous = True
    def get_id(self):
        return self.email



class Group:
    def __init__(self, id: Optional[str] = None, members: list[str] = []):
        """Group object

        Args:
            id (Optional[str], optional): Group id generated by hashing the key of the group. Defaults to None.
            members (list[str], optional): List of group member's email. Defaults to [].
        """
        self.id = id
        self.members = members


class FileOpStatus(Enum):
    """File operation status"""
    Ok = 0x00
    """Operation succeeded"""
    SuffixErr = 0x01
    """Suffix error"""
    PathErr = 0x02
    """Path error"""
    Collision = 0x10
    """Collision occurred"""
